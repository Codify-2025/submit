name: submit-ci-cd
on:
  push:
    branches: ["feature/#5/ci-cd"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Build with Gradle
        run: ./gradlew clean bootJar -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/submit:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/submit:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
       NGINX_CONTAINER: nginx
       SUBMIT_DIR: /home/submit
    steps:
      # 현재 붙어있는 submit 색상 읽기
      - name: Decide target color
        id: decide
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIVE_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          capture_stdout: true
          script: |
            set -e
            if [ -f /home/nginx/active-color.inc ]; then
              CURRENT=$(grep -oE '(blue|green)' /home/nginx/active-color.inc 2>/dev/null | head -n1 || true)
            fi
            [ -z "$CURRENT" ] && CURRENT=green

            if [ "$CURRENT" = "blue" ]; then
              echo "TARGET=green"
              echo "OLD_CONTAINER=submit-blue"
            else
              echo "TARGET=blue"
              echo "OLD_CONTAINER=submit-green"
            fi

      # 러너에서 env로 export
      - name: Export deploy envs
        shell: bash
        run: |
          OUT="${{ steps.decide.outputs.stdout }}"
          echo "$OUT"
          TARGET=$(echo "$OUT" | grep -oE 'TARGET=(blue|green)' | tail -n1 | cut -d= -f2)
          OLD_CONTAINER=$(echo "$OUT" | grep -oE 'OLD_CONTAINER=submit-(blue|green)' | tail -n1 | cut -d= -f2)
          [ -z "$TARGET" ] && echo "TARGET missing" && exit 1
          [ -z "$NEW_PORT" ] && echo "NEW_PORT missing" && exit 1
          [ -z "$OLD_CONTAINER" ] && echo "OLD_CONTAINER missing" && exit 1
          echo "TARGET=$TARGET" >> $GITHUB_ENV
          echo "NEW_PORT=$NEW_PORT" >> $GITHUB_ENV
          echo "OLD_CONTAINER=$OLD_CONTAINER" >> $GITHUB_ENV
          
      # 새 이미지 pull & 대상 컨테이너 up
      - name: Pull & Up target container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIVE_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd "${{ env.SUBMIT_DIR }}"
            export DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/submit:latest
            sudo docker pull $DOCKER_IMAGE
            if [ "${{ env.TARGET }}" = "blue" ]; then
              DOCKER_IMAGE=$DOCKER_IMAGE sudo -E docker compose -f docker-compose-submit-blue.yml up -d submit-blue
            else
              DOCKER_IMAGE=$DOCKER_IMAGE sudo -E docker compose -f docker-compose-submit-green.yml up -d submit-green
            fi

      # 새 컨테이너 내부 헬스체크
      - name: Health check new container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIVE_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            if [ "${{ env.TARGET }}" = "blue" ]; then TARGET_CONTAINER=submit-blue; else TARGET_CONTAINER=submit-green; fi
            for i in {1..12}; do
              code=$(sudo docker run --rm --network codify_net curlimages/curl:8.10.1 \
                       -s -o /dev/null -w '%{http_code}' http://$TARGET_CONTAINER:8080/test/hc || true)
              echo "attempt $i -> $code"
              [ "$code" = "200" ] && exit 0
              sleep 5
            done
            echo "New target did not become healthy"; exit 1

      # NGINX 스위치 (service-submit.inc 갱신 후 reload)
      - name: Switch NGINX to target color
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIVE_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            sudo bash -lc 'printf "map \$request_uri \$X_COLOR {\n    default \"\";\n    ~^/api/submit/ %s;\n}\n" "${{ env.TARGET }}" > /home/nginx/active-color.inc'
            sudo docker exec nginx nginx -t
            sudo docker exec nginx nginx -s reload
        
      # 기존 컨테이너 정리
      - name: Stop old container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIVE_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker rm -f ${{ env.OLD_CONTAINER }} || true
